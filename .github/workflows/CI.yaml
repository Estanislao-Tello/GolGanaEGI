name: Build üê≥ ¬∑ Push ¬∑ Patch DEV Manifests

on:
  push:
    branches: [ dev ]          # ‚Üê se ejecuta en cada push a la rama dev

env:
  REGISTRY: docker.io
  IMAGE_FRONT: ignaciosa/front
  IMAGE_BACK:  ignaciosa/back
  TAG: latest                  # tag ‚Äúm√≥vil‚Äù (se sobreescribe en cada build)

  # Repositorio de manifiestos
  MANIFESTS_REPO: Estanislao-Tello/ManifiestosEGI
  OVERLAY_DEV:   manifests/ManifiestosEGI/overlays/dev/patch-images.yaml

jobs:
  build-push-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: read           # leer este repo y commit en el otro
      packages: write          # subir im√°genes a Docker Hub

    steps:

    ############################################################
    # 1) Checkout del c√≥digo fuente (este repo, rama dev)
    ############################################################
    - uses: actions/checkout@v4

    ############################################################
    # 2) Build & push im√°genes :latest
    ############################################################
    - name: Set up Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.CR_USER }}
        password: ${{ secrets.CR_PAT }}

    - name: Build & push frontend (:latest)
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/frontend
        file: ./appdemo/frontend/Dockerfile
        push: true
        tags: ${{ env.IMAGE_FRONT }}:${{ env.TAG }}

    - name: Build & push backend (:latest)
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/backend
        file: ./appdemo/backend/Dockerfile
        push: true
        tags: ${{ env.IMAGE_BACK }}:${{ env.TAG }}

    ############################################################
    # 3) Checkout del repo de manifiestos
    ############################################################
    - name: Checkout manifests repo
      uses: actions/checkout@v4
      with:
        repository: ${{ env.MANIFESTS_REPO }}
        token: ${{ secrets.GIT_PAT }}         # PAT con permiso de push
        path: manifests
        ref: main                            # ajusta si tu rama es otra

    ############################################################
    # 4) Parchear overlay DEV
    ############################################################
    - name: Patch images & add build timestamp
      working-directory: manifests/ManifiestosEGI/overlays/dev
      env:
        FRONT_REF: "${{ env.IMAGE_FRONT }}:${{ env.TAG }}"
        BACK_REF:  "${{ env.IMAGE_BACK }}:${{ env.TAG }}"
        BUILD_TS:  "${{ github.run_id }}-${{ github.run_attempt }}"  # id √∫nico
      run: |
        # Instalar yq v4
        sudo curl -sSL \
          https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 \
          -o /usr/local/bin/yq && sudo chmod +x /usr/local/bin/yq

        # Actualizar image: y anotar el build
        yq -i '
          (select(.kind=="Deployment" and .metadata.name=="pagina-web")
            .spec.template.spec.containers[] | select(.name=="pagina-web").image)
              = strenv(FRONT_REF) |
          (select(.kind=="Deployment" and .metadata.name=="pagina-web")
            .spec.template.metadata.annotations //= {})["dev-build-at"]
              = strenv(BUILD_TS) |

          (select(.kind=="Deployment" and .metadata.name=="backend")
            .spec.template.spec.containers[] | select(.name=="backend").image)
              = strenv(BACK_REF) |
          (select(.kind=="Deployment" and .metadata.name=="backend")
            .spec.template.metadata.annotations //= {})["dev-build-at"]
              = strenv(BUILD_TS)
        ' patch-images.yaml

    ############################################################
    # 5) Commit & push (siempre habr√° diff por la anotaci√≥n)
    ############################################################
    - name: Commit & push manifests
      run: |
        cd manifests/ManifiestosEGI
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add overlays/dev/patch-images.yaml
        git commit -m "ci(dev): build $BUILD_TS ‚Äì tag ${TAG}"
        git push origin main           # ajusta si tu rama es distinta
