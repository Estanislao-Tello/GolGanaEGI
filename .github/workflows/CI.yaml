name: Build 🐳 · Push · Patch DEV Manifests

on:
  push:
    branches: [ dev ]

env:
  IMAGE_FRONT: ignaciosa/front
  IMAGE_BACK:  ignaciosa/back
  TAG: latest

  MANIFESTS_REPO: Estanislao-Tello/ManifiestosEGI
  OVERLAY_DEV: manifests/ManifiestosEGI/overlays/dev/patch-images.yaml

jobs:
  build-push-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # 1) Código fuente
    - uses: actions/checkout@v4

    # 2) Build & push imágenes :latest
    - name: Set up Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.CR_USER }}
        password: ${{ secrets.CR_PAT }}

    - name: Build & push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/frontend
        file:   ./appdemo/frontend/Dockerfile
        push:   true
        tags:   ${{ env.IMAGE_FRONT }}:${{ env.TAG }}

    - name: Build & push backend
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/backend
        file:   ./appdemo/backend/Dockerfile
        push:   true
        tags:   ${{ env.IMAGE_BACK }}:${{ env.TAG }}

    # 3) Checkout manifiestos
    - name: Checkout manifests repo
      uses: actions/checkout@v4
      with:
        repository: ${{ env.MANIFESTS_REPO }}
        token:      ${{ secrets.GIT_PAT }}
        path:       manifests
        ref:        main               # ajusta si usas otra rama

    # 4) Parchear overlay DEV
    - name: Patch images & add build-id
      working-directory: manifests/ManifiestosEGI/overlays/dev
      env:
        FRONT_REF: "${{ env.IMAGE_FRONT }}:${{ env.TAG }}"
        BACK_REF:  "${{ env.IMAGE_BACK }}:${{ env.TAG }}"
        BUILD_TS:  "${{ github.run_id }}-${{ github.run_attempt }}"
      run: |
        sudo curl -sSL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 \
             -o /usr/local/bin/yq && sudo chmod +x /usr/local/bin/yq

        # ── Actualizar imagen y anotar build ────────────────────────────────
        yq -i '
          # FRONTEND
          (select(.kind=="Deployment" and .metadata.name=="pagina-web")
            .spec.template.spec.containers[]
            | select(.name=="pagina-web").image) |= strenv(FRONT_REF) |
          (select(.kind=="Deployment" and .metadata.name=="pagina-web")
            .spec.template.metadata.annotations //= {})["dev-build-at"]
              = strenv(BUILD_TS) |

          # BACKEND
          (select(.kind=="Deployment" and .metadata.name=="backend")
            .spec.template.spec.containers[]
            | select(.name=="backend").image)    |= strenv(BACK_REF) |
          (select(.kind=="Deployment" and .metadata.name=="backend")
            .spec.template.metadata.annotations //= {})["dev-build-at"]
              = strenv(BUILD_TS)
        ' patch-images.yaml

    # 5) Commit & push (siempre hay diff por la anotación)
    - name: Commit & push manifests
      run: |
        cd manifests/ManifiestosEGI
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add overlays/dev/patch-images.yaml
        git commit -m "ci(dev): build $BUILD_TS – tag $TAG"
        git push origin main       # usa la rama que tengas en el repo de manifiestos
