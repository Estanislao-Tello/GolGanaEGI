# .github/workflows/ci-dev.yml
# -------------------------------------------------------------------
# Build üê≥ ¬∑ Push ¬∑ Patch DEV Manifests
#   ‚Ä¢ Publica im√°genes :latest (front + back)
#   ‚Ä¢ A√±ade/actualiza spec.template.metadata.annotations.build-id
#     con un valor diferente en cada ejecuci√≥n
#   ‚Ä¢ Commit s√≥lo si el patch cambi√≥
# -------------------------------------------------------------------

name: Build üê≥ ¬∑ Push ¬∑ Patch DEV Manifests

on:
  push:
    branches: [ dev ]

env:
  IMAGE_FRONT: ignaciosa/front
  IMAGE_BACK : ignaciosa/back
  TAG        : latest
  MANIFESTS_REPO: Estanislao-Tello/ManifiestosEGI

jobs:
  build-push-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # 1) Checkout del c√≥digo fuente
    - uses: actions/checkout@v4

    # 2) Build & push im√°genes :latest
    - uses: docker/setup-buildx-action@v3

    - name: Docker Hub login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.CR_USER }}
        password: ${{ secrets.CR_PAT }}

    - name: Build & push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/frontend
        file:   ./appdemo/frontend/Dockerfile
        push:   true
        tags:   ${{ env.IMAGE_FRONT }}:${{ env.TAG }}

    - name: Build & push backend
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/backend
        file:   ./appdemo/backend/Dockerfile
        push:   true
        tags:   ${{ env.IMAGE_BACK }}:${{ env.TAG }}

    # 3) Checkout repo de manifiestos
    - uses: actions/checkout@v4
      with:
        repository: ${{ env.MANIFESTS_REPO }}
        token:      ${{ secrets.GIT_PAT }}
        path:       manifests
        ref:        main          # ajusta si tu rama es otra

    # 4) Parchear overlay DEV
    - name: Patch images + build-id annotation
      working-directory: manifests/ManifiestosEGI/overlays/dev
      env:
        FRONT_REF: "${{ env.IMAGE_FRONT }}:${{ env.TAG }}"
        BACK_REF : "${{ env.IMAGE_BACK }}:${{ env.TAG }}"
        BUILD_ID : "${{ github.run_id }}-${{ github.run_attempt }}"
      run: |
        # Instalar yq v4
        curl -sSL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 \
          -o yq && chmod +x yq && sudo mv yq /usr/local/bin/

        ################  pagina-web  ################
        yq eval -i '
          if (.kind == "Deployment" and .metadata.name == "pagina-web") then
            # 1) Imagen
            (.spec.template.spec.containers[] | select(.name == "pagina-web").image)
              = strenv(FRONT_REF) |
            # 2) Anotaci√≥n (crea bloque si no existe)
            (.spec.template.metadata.annotations //= {}) |
            (.spec.template.metadata.annotations.build-id) = strenv(BUILD_ID)
          else
            .
          end
        ' patch-images.yaml

        ################  backend  ###################
        yq eval -i '
          if (.kind == "Deployment" and .metadata.name == "backend") then
            (.spec.template.spec.containers[] | select(.name == "backend").image)
              = strenv(BACK_REF) |
            (.spec.template.metadata.annotations //= {}) |
            (.spec.template.metadata.annotations.build-id) = strenv(BUILD_ID)
          else
            .
          end
        ' patch-images.yaml

    # 5) Commit & push s√≥lo si hay cambios
    - name: Commit & push manifests
      working-directory: manifests/ManifiestosEGI
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add overlays/dev/patch-images.yaml

        if git diff --cached --quiet; then
          echo "¬∑ Sin cambios: omito commit/push"
          exit 0
        fi

        git commit -m "ci(dev): build ${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT} ‚Äì tag ${TAG}"
        git push origin main
