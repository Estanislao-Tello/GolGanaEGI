# .github/workflows/ci-dev.yml
# -------------------------------------------------------------------
# Build üê≥ ¬∑ Push ¬∑ Patch DEV Manifests
# -------------------------------------------------------------------

name: Build üê≥ ¬∑ Push ¬∑ Patch DEV Manifests

on:
  push:
    branches: [ dev ]

env:
  IMAGE_FRONT: ignaciosa/front
  IMAGE_BACK:  ignaciosa/back
  TAG:         latest
  MANIFESTS_REPO: Estanislao-Tello/ManifiestosEGI

jobs:
  build-push-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # 1) C√≥digo fuente
    - name: Checkout source
      uses: actions/checkout@v4

    # 2) Build & push im√°genes :latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Hub login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.CR_USER }}
        password: ${{ secrets.CR_PAT }}

    - name: Build & push frontend (:latest)
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/frontend
        file:   ./appdemo/frontend/Dockerfile
        push:   true
        tags:   ${{ env.IMAGE_FRONT }}:${{ env.TAG }}

    - name: Build & push backend (:latest)
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/backend
        file:   ./appdemo/backend/Dockerfile
        push:   true
        tags:   ${{ env.IMAGE_BACK }}:${{ env.TAG }}

    # 3) Repo de manifiestos
    - name: Checkout manifests repo
      uses: actions/checkout@v4
      with:
        repository: ${{ env.MANIFESTS_REPO }}
        token:      ${{ secrets.GIT_PAT }}
        path:       manifests
        ref:        main

    # 4) Parchear overlay DEV
    - name: Patch images & annotate build-id
      working-directory: manifests/ManifiestosEGI/overlays/dev
      env:
        FRONT_REF: "${{ env.IMAGE_FRONT }}:${{ env.TAG }}"
        BACK_REF:  "${{ env.IMAGE_BACK }}:${{ env.TAG }}"
        BUILD_TS:  "${{ github.run_id }}-${{ github.run_attempt }}"
      run: |
        # Instalar yq v4 (√∫ltima estable)
        curl -sSL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 \
          -o yq && chmod +x yq && sudo mv yq /usr/local/bin/

        ############  IM√ÅGENES  ############
        # Front
        yq eval -i '
          (select(.kind == "Deployment" and .metadata.name == "pagina-web")
            .spec.template.spec.containers[]
            | select(.name == "pagina-web").image) = strenv(FRONT_REF)
        ' patch-images.yaml

        

        ############  ANOTACIONES  ############
        # Front
        yq eval -i '
          (select(.kind == "Deployment" and .metadata.name == "pagina-web")
            .spec.template.metadata.annotations // {})
            ["dev-build-at"] = strenv(BUILD_TS)
        ' patch-images.yaml

        # Back
        yq eval -i '
          (select(.kind == "Deployment" and .metadata.name == "backend")
            .spec.template.metadata.annotations // {})
            ["dev-build-at"] = strenv(BUILD_TS)
        ' patch-images.yaml

    # 5) Commit & push manifiestos
    - name: Commit & push manifests
      working-directory: manifests/ManifiestosEGI
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add overlays/dev/patch-images.yaml
        git commit -m "ci(dev): build ${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT} ‚Äì tag ${TAG}"
        git push origin main
