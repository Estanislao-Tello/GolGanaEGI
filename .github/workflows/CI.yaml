name: Build üê≥ ¬∑ Push ¬∑ Patch Manifests

on:
  push:
    branches: [dev]          # rama del c√≥digo que dispara el pipeline

env:
  REGISTRY: docker.io
  IMAGE_FRONT: ignaciosa/front
  IMAGE_BACK:  ignaciosa/back

jobs:
  build-push-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: read          # para clonar y hacer commit
      packages: write         # para publicar im√°genes en Docker Hub

    steps:
    # 1) Checkout del c√≥digo fuente
    - uses: actions/checkout@v4

    # 2) Builder + login a Docker Hub
    - name: Set up Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.CR_USER }}
        password: ${{ secrets.CR_PAT }}

    # 3) Build & push FRONTEND  ‚Äî‚ñ∫ tag :latest
    - name: Build & push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/frontend
        file: ./appdemo/frontend/Dockerfile
        push: true
        tags: ${{ env.IMAGE_FRONT }}:latest

    # 4) Build & push BACKEND  ‚Äî‚ñ∫ tag :latest
    - name: Build & push backend
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/backend
        file: ./appdemo/backend/Dockerfile
        push: true
        tags: ${{ env.IMAGE_BACK }}:latest

    # 5) Clonar el repo de manifiestos
    - name: Checkout manifests repo
      uses: actions/checkout@v4
      with:
        repository: Estanislao-Tello/ManifiestosEGI   # ‚ö† ajusta si cambia
        token: ${{ secrets.GIT_PAT }}                 # PAT con permiso de push
        path: manifests                               # carpeta de destino
        ref: main                                     # rama de manifiestos

    # 6) Parchear patch-images.yaml con tag :latest
    - name: Update image tags in patch-images.yaml
      run: |
        cd manifests/ManifiestosEGI/overlays/dev

        # Instalar yq (binario est√°tico)
        sudo curl -sSL \
          https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 \
          -o /usr/local/bin/yq && sudo chmod +x /usr/local/bin/yq

        yq -i '
          (select(.kind=="Deployment" and .metadata.name=="pagina-web")
            .spec.template.spec.containers[] | select(.name=="pagina-web").image) = "ignaciosa/front:latest" |
          (select(.kind=="Deployment" and .metadata.name=="backend")
            .spec.template.spec.containers[] | select(.name=="backend").image)    = "ignaciosa/back:latest"
        ' patch-images.yaml

    # 7) Commit & push SOLO si hubo cambios reales
    - name: Commit & push manifests
      run: |
        cd manifests
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        if ! git diff --quiet; then
          git add ManifiestosEGI/overlays/dev/patch-images.yaml
          git commit -m "ci(dev): update images to tag latest"
          git push origin main        # ajusta la rama si es distinta
        else
          echo "Sin cambios en patch-images.yaml ‚Äî nada que commitear."
        fi
