# .github/workflows/ci-dev.yaml
# ------------------------------------------------------------------
# Build üê≥ ¬∑ Push ¬∑ Patch Manifests (dev)
# ------------------------------------------------------------------

name: Build üê≥ ¬∑ Push ¬∑ Patch Manifests (dev)

on:
  push:
    branches: [dev]

env:
  # üîß Ajusta seg√∫n tu caso
  REGISTRY: docker.io
  IMAGE_FRONT: ignaciosa/front
  IMAGE_BACK:  ignaciosa/back
  MANIFESTS_REPO: Estanislao-Tello/ManifiestosEGI
  PATCH_FILE: ManifiestosEGI/overlays/dev/patch-images.yaml   # ‚Üê aqu√≠ est√° tu patch

jobs:
  build-push-patch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # 1) Checkout del c√≥digo fuente (rama dev)
    - name: Checkout source
      uses: actions/checkout@v4

    # 2) Tag incremental v<n>
    - name: Compute version tag
      id: meta
      run: |
        commits=$(git rev-list --count HEAD)
        echo "tag=v$commits" >> "$GITHUB_OUTPUT"

    # 3) Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 4) Login a Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.CR_USER }}
        password: ${{ secrets.CR_PAT }}

    # 5) Build & push frontend
    - name: Build & push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/frontend
        push: true
        tags: ${{ env.IMAGE_FRONT }}:${{ steps.meta.outputs.tag }}

    # 6) Build & push backend
    - name: Build & push backend
      uses: docker/build-push-action@v5
      with:
        context: ./appdemo/backend
        push: true
        tags: ${{ env.IMAGE_BACK }}:${{ steps.meta.outputs.tag }}

    # 7) Checkout repo de manifiestos
    - name: Checkout manifests repo
      uses: actions/checkout@v4
      with:
        repository: ${{ env.MANIFESTS_REPO }}
        token: ${{ secrets.GIT_PAT }}
        path: manifests

    # 8) Instalar yq
    - name: Install yq
      run: |
        sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64 \
          -O /usr/local/bin/yq && sudo chmod +x /usr/local/bin/yq

    # 9) Actualizar patch-images.yaml (frontend y backend)
    - name: Patch images in patch-images.yaml
      working-directory: manifests
      env:
        TAG: ${{ steps.meta.outputs.tag }}
        PATCH: ${{ env.PATCH_FILE }}
      run: |
        # Frontend
        yq e -i '.spec.template.spec.containers[0].image = "ignaciosa/front:" + env(TAG)' "$PATCH"
        # Backend
        yq e -i '.spec.template.spec.containers[0].image = "ignaciosa/back:" + env(TAG)'  "$PATCH"

    # 10) Commit & push si hubo cambios
    - name: Commit and push patch
      working-directory: manifests
      run: |
        git config user.email "actions@github.com"
        git config user.name  "github-actions"
        if git status --porcelain | grep .; then
          git add "$PATCH_FILE"
          git commit -m "ci(dev): promote ${{ steps.meta.outputs.tag }} [skip ci]"
          git push
        else
          echo "No hay cambios que commitear"
        fi
